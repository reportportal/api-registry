openapi: 3.0.3
info:
  title: Test Case Attachments API
  description: API for managing attachments in test cases
  version: 1.0.0
  contact:
    name: ReportPortal Team
    url: https://reportportal.io
    email: support@reportportal.io
servers:
  - url: https://api.reportportal.io/v1
    description: Production server
  - url: https://dev-api.reportportal.io/v1
    description: Development server
tags:
  - name: Attachments
    description: Operations for managing test case attachments

paths:
  /project/{projectKey}/tms/test-case/attachment:
    post:
      tags:
        - Attachments
      summary: Upload attachment file
      description: Uploads a file to be used as an attachment in test cases
      operationId: uploadAttachment
      parameters:
        - $ref: '#/components/parameters/ProjectKeyParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload
                description:
                  type: string
                  description: Optional description for the attachment
                attachmentType:
                  type: string
                  description: Type of the attachment
                  enum: [SCREENSHOT, DOCUMENT, VIDEO, OTHER]
                  default: OTHER
              required:
                - file
      responses:
        '201':
          description: Attachment uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentRS'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ProjectNotFound'
        '413':
          description: File size exceeds the allowed limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /project/{projectKey}/tms/test-case/attachment/{attachmentId}:
    get:
      tags:
        - Attachments
      summary: Download attachment file
      description: Downloads a specific attachment file by its ID
      operationId: downloadAttachment
      parameters:
        - $ref: '#/components/parameters/ProjectKeyParam'
        - $ref: '#/components/parameters/AttachmentIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            video/mp4:
              schema:
                type: string
                format: binary
            application/zip:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/AttachmentNotFound'
    delete:
      tags:
        - Attachments
      summary: Delete attachment file
      description: Deletes a specific attachment file by its ID
      operationId: deleteAttachment
      parameters:
        - $ref: '#/components/parameters/ProjectKeyParam'
        - $ref: '#/components/parameters/AttachmentIdParam'
      responses:
        '204':
          description: Attachment deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/AttachmentNotFound'

  /project/{projectKey}/tms/test-case/attachment/{attachmentId}/metadata:
    get:
      tags:
        - Attachments
      summary: Get attachment metadata
      description: Retrieves metadata information about a specific attachment
      operationId: getAttachmentInfo
      parameters:
        - $ref: '#/components/parameters/ProjectKeyParam'
        - $ref: '#/components/parameters/AttachmentIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentRS'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/AttachmentNotFound'

components:
  schemas:
    AttachmentRS:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the attachment
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          description: Name of the attachment file
          example: "screenshot.png"
        contentType:
          type: string
          description: MIME type of the attachment
          example: "image/png"
        size:
          type: integer
          format: int64
          description: Size of the attachment in bytes
          example: 24680
        description:
          type: string
          description: Description of the attachment
          example: "Login screen screenshot"
        attachmentType:
          type: string
          enum: [SCREENSHOT, DOCUMENT, VIDEO, OTHER]
          description: Type of the attachment
          example: "SCREENSHOT"
        uploadDate:
          type: string
          format: date-time
          description: Date and time when the attachment was uploaded
          example: "2023-06-15T10:30:45Z"
        uploadedBy:
          type: string
          description: Username of the user who uploaded the attachment
          example: "john.doe"

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Time when the error occurred
          example: "2023-06-15T10:30:45Z"
        status:
          type: integer
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Error type
          example: "Bad Request"
        message:
          type: string
          description: Error message
          example: "Invalid file format"
        path:
          type: string
          description: Request path
          example: "/project/default/tms/test-case/attachment"

  parameters:
    ProjectKeyParam:
      name: projectKey
      in: path
      description: Key of the project
      required: true
      schema:
        type: string
        example: "default"
    AttachmentIdParam:
      name: attachmentId
      in: path
      description: ID of the attachment
      required: true
      schema:
        type: string
        format: uuid
        example: "550e8400-e29b-41d4-a716-446655440000"

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ProjectNotFound:
      description: Project not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    AttachmentNotFound:
      description: Attachment not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

openapi: 3.0.3
info:
  title: Activities API
  version: Organization
  description: API Collection for working with activities.
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: Reingold Shekhtel
    email: reingold_shekhtel@epam.com
servers:
  - url: '{protocol}://{authority}/{basePath}'
    description: ReportPortal server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol
      authority:
        default: demo.reportportal.io
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: api
        description: Base path of Report Portal API
security:
  - BearerAuth: []
paths:
  /activities/searches:
    parameters: []
    post:
      summary: Search activities by complex criteria
      operationId: activities-search
      description: 'This is a [GET with body payload](https://opensource.zalando.com/restful-api-guidelines/#get-with-body) that doesn''''t create resources. It returns all activities matching the query passed as the request input payload.'
      tags:
        - Activities
      parameters:
        - schema:
            type: string
          in: query
          name: limit
          description: The limit used for this page of results. This will be the same as the limit query parameter unless it exceeded the maximum value allowed for this API endpoint
        - schema:
            type: string
          in: query
          name: offset
          description: The offset used for this page of results
        - schema:
            type: string
          in: query
          name: sort
          description: Indicate sort by field
        - schema:
            type: string
            enum:
              - ASC
              - DESC
          in: query
          name: order
          description: Indicate sorting direction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                search_criterias:
                  type: array
                  items:
                    $ref: '#/components/schemas/SearchCriteria'
              required:
                - search_criterias
            examples:
              Example 1:
                value:
                  search_criterias:
                    - filter_key: predefinedFilter
                      value: test
                    - filter_key: projectName
                      operation: EQ
                      value: test
                    - filter_key: eventName
                      operation: IN
                      value: 'createDashboard,deleteWidget'
                    - filter_key: createdAt
                      operation: BTW
                      value: 0;1440;+0300
                    - filter_key: objectType
                      operation: IN
                      value: 'DEFECT_TYPE,LAUNCH'
                    - filter_key: objectName
                      operation: CNT
                      value: test
                    - filter_key: subjectType
                      operation: IN
                      value: 'USER,RULE'
                    - filter_key: subjectName
                      operation: IN
                      value: 'superadmin,user'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Offset.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Activity'
        '400':
          description: Bad Request
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Activity:
      title: Activity
      type: object
      description: activity details
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        created_at:
          type: string
          format: date-time
        event_name:
          type: string
        object_id:
          type: integer
          exclusiveMinimum: false
          exclusiveMaximum: false
          format: int64
          minimum: 1
        object_name:
          type: string
        object_type:
          type: string
        project_id:
          type: integer
          format: int64
          exclusiveMinimum: false
          minimum: 1
        project_name:
          type: string
        subject_name:
          type: string
        subject_type:
          type: string
        details:
          type: object
          properties:
            history:
              type: array
              items:
                $ref: '#/components/schemas/HistoryField'
    HistoryField:
      title: HistoryField
      type: object
      properties:
        field:
          type: string
        old_value:
          type: string
        new_value:
          type: string
    SearchCriteria:
      title: SearchCriteria
      type: object
      properties:
        filter_key:
          type: string
          description: search by field
        operation:
          type: string
          enum:
            - EQ
            - NE
            - CNT
            - NON_CNT
            - BTW
            - IN
          description: operation to perform for the filter
        value:
          type: string
          description: search value
      required:
        - filter_key
        - value
tags:
  - name: Activities
    description: API Collection for working with activities.
  - name: Organizations
    description: API Collection for working with organizations.
  - name: Projects
    description: API Collection for working with projects.
  - name: Suggestions
    description: API Collection for working with suggestions.
  - name: User API Keys
    description: API Collection for working with user API keys.

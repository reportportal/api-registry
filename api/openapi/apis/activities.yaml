openapi: 3.0.3
info:
  title: Activities API
  version: Organization
  description: API Collection for working with activities.
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: Reingold Shekhtel
    email: reingold_shekhtel@epam.com
servers:
  - url: '{host}{basePath}'
    description: ReportPortal server
    variables:
      host:
        default: 'https://demo.reportportal.io'
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: /api
        description: Base path of Report Portal API
security:
  - BearerAuth: []
paths:
  /activities/searches:
    parameters: []
    post:
      summary: Search activities by complex criteria
      operationId: activities-search
      description: |-
        Create search request by activities.

        You can use the following attributes as a `search_criteria[*].filter_key` for filtering:

        - `eventName`
        - `objectType`
        - `objectName`
        - `organizationId`
        - `organizationName`
        - `projectName`
        - `subjectType`
        - `subjectName`
        - `createdAt`

        ### Authority

        - `ADMINISTRATOR`
      tags:
        - Activities
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/SearchCriteriaRQ.yaml
        description: |
          This is a [GET with body payload](https://opensource.zalando.com/restful-api-guidelines/#get-with-body) 
          that doesn't create resources. 
          It returns all activities matching the query passed as the request input payload.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Offset.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Activity'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Activity:
      title: Activity
      type: object
      description: activity details
      properties:
        id:
          $ref: '../types/identifier.yaml'
        created_at:
          type: string
          format: date-time
        event_name:
          type: string
        object_id:
          $ref: '../types/identifier.yaml'
        object_name:
          type: string
        object_type:
          type: string
        project_id:
          $ref: '../types/identifier.yaml'
        project_name:
          type: string
        subject_name:
          type: string
        subject_type:
          type: string
        details:
          type: object
          properties:
            history:
              type: array
              items:
                $ref: '#/components/schemas/HistoryField'
    HistoryField:
      title: HistoryField
      type: object
      properties:
        field:
          type: string
        old_value:
          type: string
        new_value:
          type: string
tags:
  - name: Activities
    description: API Collection for working with activities.

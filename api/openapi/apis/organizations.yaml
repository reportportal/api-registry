openapi: 3.0.3
x-stoplight:
  id: hpx2e63mc8gcc
info:
  title: Organizations API
  version: '0.1'
  description: API Collection for working with organizations.
  contact:
    name: Reingold Shekhtel
    email: reingold_shekhtel@epam.com
servers:
  - url: '{protocol}://{authority}/{basePath}'
    description: ReportPortal server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol
      authority:
        default: demo.reportportal.io
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: api
        description: Base path of Report Portal API
paths:
  /organizations:
    get:
      summary: Get a list of organizations
      tags:
        - Organization
        - Implemented
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProfilesPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations
      description: |-
        Get a list of existing organizations.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Access level

        - `ADMINISTRATOR` - no restrictions.
        - `MANAGER` - limited to viewing only their assigned organizations.
        - `MEMBER` - limited to viewing only their assigned organizations.
      parameters:
        - $ref: ../parameters/Pagination.yaml#/Offset
        - $ref: ../parameters/Pagination.yaml#/Limit
        - $ref: ../parameters/Pagination.yaml#/Order
        - schema:
            type: string
          in: query
          name: name
          description: Filter organizations by name by substring
        - schema:
            type: string
            pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          in: query
          name: slug
          description: Filter organizations by slug
        - schema:
            type: string
            default: name
          in: query
          name: sort
          description: Indicate sort by field
    post:
      summary: Create a new organization
      operationId: post-organizations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
      description: |
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Create a new organization. Provide name and slug.

        ### Authority: 

        - `ADMINISTRATOR`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: 'You can create an organization provide name and slug. If the `slug` is not provided, it will be generated from the `name`.'
      tags:
        - Organization
        - Ready for implementation
  '/organizations/{org_id}':
    get:
      summary: Get organization information
      tags:
        - Organization
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProfile'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations-org_id
      description: |-
        Provide organization information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    put:
      summary: Update organization
      operationId: put-organizations-org_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: hiod6ajoz3rrg
                    default: The organization update was completed successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Update organization information with the provided data.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: Provide organization information for update.
      tags:
        - Organization
        - Ready for implementation
      x-internal: false
    patch:
      summary: Partial organization update
      operationId: patch-organizations-org_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: y1kxomqmeigfg
                    default: The organization update was completed successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Particular organization fields update via the [JSON Merge Patch standard](https://datatracker.ietf.org/doc/html/rfc7386).

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: 'Use PATCH with JSON Merge Patch standard, a specialized media type application/merge-patch+json for partial resource representation to update parts of resource objects.'
      tags:
        - Organization
        - Ready for implementation
      x-internal: false
    delete:
      summary: Delete organization
      operationId: delete-organizations-org_id
      responses:
        '204':
          description: No Content
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Delete organization by identifier.

        ### Authority:

        - `ADMINISTRATOR`
      tags:
        - Organization
        - Ready for implementation
      x-internal: false
  '/organizations/{org_id}/users':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: Get organization's users
      tags:
        - Organization User
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUsersPage'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations-org_id-users
      description: |-
        Provides a list of organization's users.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      parameters:
        - $ref: ../parameters/Pagination.yaml#/Offset
        - $ref: ../parameters/Pagination.yaml#/Limit
        - $ref: ../parameters/Pagination.yaml#/Order
        - in: query
          name: sort
          description: Indicate sort by field
          schema:
            type: string
            default: name
    post:
      summary: Assignment user to organization
      operationId: post-organizations-org_id-users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: afgrunmf5xc2n
                    example: The user was added to the organization.
              examples:
                Assign or create:
                  value:
                    message: The user was added to the organization.
        '207':
          description: Multi-Status (WebDAV)
          content:
            application/json:
              schema:
                $ref: ../models/Multistatus.yaml
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        This is a complex endpoint that provides a flow for assigning a user to the organization.
        It can be used as a bulk endpoint if you provide a list of projects for assignment.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`

        ### Project authority:

        - `ADMINISTRATOR`
        - `MANAGER`

        #### For assignment user to the organization's projects:

        A users with the `ADMINISTRATOR` and `MANAGER` roles can assign users to the organization.

        ### Response event statuses

        You will get different statuses for project assignments according to which user you want
        to assign to the organization.
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/OrganizationUserDefinition'
                - $ref: '#/components/schemas/OrganizationUserAttributes'
                - $ref: ../models/user/UserProjectsList.yaml
        description: Definition for a user assignment.
      tags:
        - Organization User
        - Ready for implementation
  '/organizations/{org_id}/users/{user_id}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get organization user profile
      tags:
        - Organization User
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserInfo'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations-org_id-users-user_id
      description: |-
        Get organization user profile.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with `MEMBER` role can get only his profile.

        ### Member authority:

        - `EDITOR`
        - `VIEWER`
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/PatchOperation.yaml
    put:
      summary: Update organization user details
      operationId: put-organizations-org_id-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserInfo'
        '207':
          description: |-
            Multi-Status (WebDAV)

            Response for a user assignment with projects.
          content:
            application/json:
              schema:
                $ref: ../models/Multistatus.yaml
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/OrganizationUserAttributes'
                - $ref: ../models/user/UserProjectsList.yaml
        description: Provide organization's user information for update.
      tags:
        - Organization User
        - Ready for implementation
      description: |-
        Update organization user details.

        Organization user details for update.

        ### Organization authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Project authority:

        - `EDITOR`
    patch:
      summary: Partial organization user update
      operationId: patch-organizations-org_id-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserInfo'
        '207':
          description: |-
            Multi-Status (WebDAV)

            Response for a user assignment with projects.
          content:
            application/json:
              schema:
                $ref: ../models/Multistatus.yaml
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        Partial organization user update.

        You can provide a project list as an additional option for assigning or unassigned
        a user from projects.

        ### Organization authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Project authority:

        - `EDITOR`
      tags:
        - Organization User
        - Ready for implementation
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: ../models/PatchOperation.yaml
        description: ''
    delete:
      summary: Unassigned organization user
      operationId: delete-organizations-org_id-users-user_id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        Unassigned user from an organization and all organization projects.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      tags:
        - Organization User
        - Ready for implementation
  '/organizations/{org_id}/projects':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: Get organization projects
      tags:
        - Organization Project
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProjectsPage'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations-org_id-projects
      parameters:
        - $ref: ../parameters/Pagination.yaml#/Limit
        - $ref: ../parameters/Pagination.yaml#/Offset
        - $ref: ../parameters/Pagination.yaml#/Order
        - schema:
            type: string
          in: query
          name: name
          description: Filter projects by containing name
        - schema:
            type: string
            pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          in: query
          name: slug
          description: Filter projects by slug
        - schema:
            type: string
            default: name
          in: query
          name: sort
          description: Indicate sort by field
      description: |-
        Get a list of organization projects.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Access level

        - `ADMINISTRATOR` - no restrictions.
        - `MANAGER` - no restrictions.
        - `MEMBER` - restricted to viewing only their assigned projects.
    post:
      summary: Create a new project
      tags:
        - Organization Project
        - Ready for implementation
      operationId: post-organizations-org_id-projects
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProjectInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        Create a new project in the organization. 

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/project/ProjectDetails.yaml
        description: 'You can create an project provide name and slug. If the `slug` is not provided, it will be generated from the `name`.'
  '/organizations/{org_id}/projects/{project_id}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
    get:
      summary: Get project information
      tags:
        - Organization Project
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/project/ProjectProfile.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations-org_id-projects-project_id
      description: |-
        Get project information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can get only his project.

        ### Member authority:

        - 'EDITOR'
        - 'VIEWER'
    put:
      summary: Update project
      operationId: put-organizations-org_id-projects-project_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProjectInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/project/ProjectDetails.yaml
      description: |-
        Update project information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can update only his project.

        ### Member authority:

        - `EDITOR`
      tags:
        - Organization Project
        - Ready for implementation
    patch:
      summary: Partial project update
      operationId: patch-organizations-org_id-projects-project_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProjectInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: ../models/PatchOperation.yaml
        description: ''
      description: |-
        Partial project update.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can update only his project.

        ### Member authority:

        - `EDITOR`
      tags:
        - Organization Project
        - Ready for implementation
    delete:
      summary: Delete project
      tags:
        - Organization Project
        - Ready for implementation
      operationId: delete-organizations-org_id-projects-project_id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        Delete project.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
  '/organizations/{org_id}/settings':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: '#TODO'
      tags:
        - In progress
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  retention_policy:
                    $ref: '#/components/schemas/OrganizationRetentionPolicy'
                  notification_policy:
                    $ref: '#/components/schemas/OrganizationNotificationPolicy'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: 'Not Found: Organization not found.'
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations-org_id-settings
      description: '#TODO'
  '/organizations/{org_id}/settings/{setting_name}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - schema:
          type: string
          enum:
            - retention-policy
            - notification-policy
        name: setting_name
        in: path
        required: true
        description: Specific setting name
    get:
      summary: '#TODO'
      tags:
        - In progress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                  - $ref: '#/components/schemas/OrganizationNotificationPolicy'
                description: '#TODO'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: 'Not Found: Organization or setting not found.'
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      operationId: get-organizations-org_id-settings-setting_name
      description: '#TODO'
    put:
      summary: '#TODO'
      operationId: put-organizations-org_id-settings-setting_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 7uyn7ehgi6ovb
              examples:
                Retention policy:
                  value:
                    id: retention-policy
                    status: SUCCESS
                    description: Retention policy updated successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ../models/Problem.yaml
      description: '#TODO'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
          application/xml:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
      tags:
        - In progress
    patch:
      summary: '#TODO'
      operationId: patch-organizations-org_id-settings-setting_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: ic96azfhunvje
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
      description: '#TODO'
      tags:
        - In progress
  '/organizations/{org_id}/notification-rules':
    parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - In progress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRulesList'
      operationId: get-organizations-org_id-notification-rules
      description: '#TODO'
    post:
      summary: '#TODO'
      operationId: post-organizations-org_id-notification-rules
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
      tags:
        - In progress
  '/organizations/{org_id}/notification-rules/{notify_rule_id}':
    parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
      - schema:
          type: string
        name: notify_rule_id
        in: path
        required: true
    get:
      summary: '#TODO'
      tags:
        - In progress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      operationId: get-organizations-org_id-notifications-rules-rule_id
      description: '#TODO'
    put:
      summary: '#TODO'
      operationId: put-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 925zkivx5dclj
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
      tags:
        - In progress
    patch:
      summary: '#TODO'
      operationId: patch-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 8maqxc1fpt87t
      description: '#TODO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      tags:
        - In progress
    delete:
      summary: '#TODO'
      operationId: delete-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '204':
          description: No Content
      description: '#TODO'
      tags:
        - In progress
  /organizations/searches:
    post:
      summary: Create search request for organizations
      operationId: post-organizations-searches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProfilesPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        Create search request for organizations by provided criteria.

        You can use the following attributes as a `search_criteria[*].filter_key` for filtering:

        - `name` - filter by organization name.
        - `slug` - filter by organization slug.
        - `type` - filter by organization type.
        - `created_at` - filter by creation date.
        - `updated_at` - filter by last update date.
        - `users` - filter by the number of users.
        - `projects` - filter by the number of projects.
        - `launches` - filter by the number of launches.
        - `last_launch_occurred` - filter by the last launch occurrence.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/SearchCriteriaRQ.yaml
        description: ''
      tags:
        - Organization
        - Ready for implementation
      x-extension-authority:
        - ReportPortal: User
        - ReportPortal: Admin
  '/organizations/{org_id}/projects/searches':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    post:
      summary: Create search request for organization projects
      operationId: post-organizations-org_id-projects-searches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProjectsPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Problem.yaml
      description: |-
        Create search request for organization projects by provided criteria.

        You can use the following attributes as a `search_criteria[*].filter_key` for filtering:

        - `name` - filter by project name.
        - `slug` - filter by project slug.
        - `key` - filter by project key.
        - `created_at` - filter by creation date.
        - `updated_at` - filter by last update date.
        - `users` - filter by the number of users.
        - `launches` - filter by the number of launches.
        - `last_launch_occurred` - filter by the last launch occurrence.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/SearchCriteriaRQ.yaml
      tags:
        - Organization Project
        - Ready for implementation
components:
  schemas:
    OrganizationProfilesPage:
      title: OrganizationProfilesPage
      x-stoplight:
        id: i93u0nrum1v5d
      allOf:
        - $ref: ../models/Offset.yaml
        - $ref: '#/components/schemas/OrganizationProfilesList'
    OrganizationProfilesList:
      title: List of organization profiles
      x-stoplight:
        id: qhues3miswoao
      properties:
        items:
          type: array
          x-stoplight:
            id: 7udfw4feoc516
          items:
            $ref: '#/components/schemas/OrganizationProfile'
      type: object
    OrganizationProfile:
      title: Organization profile
      x-stoplight:
        id: lzs7p3khz8n9d
      description: A comprehensive set of organization information.
      allOf:
        - $ref: '#/components/schemas/OrganizationInfo'
        - $ref: '#/components/schemas/OrganizationRelation'
    OrganizationInfo:
      title: Organization
      x-stoplight:
        id: x7vdhfbeaz5pu
      description: Various information about the organization information.
      allOf:
        - $ref: '#/components/schemas/OrganizationDetails'
        - $ref: '#/components/schemas/OrganizationMetadata'
    OrganizationDetails:
      title: Organization definition
      x-stoplight:
        id: 2gyt1v3d2gfmm
      description: |
        Basic information provided by the client.

        A `slug` is a unique identifying part of an organization. Generated according to the organization name if not specified by the user.
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: dz5igu0m6iy9o
          description: Organization display name.
          minLength: 3
          maxLength: 250
        slug:
          type: string
          nullable: true
          x-stoplight:
            id: z8xex3cdkrzjz
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          minLength: 3
          maxLength: 250
          description: 'A slug is used to identify a resource. It should be unique and contain only lowercase letters, numbers, and hyphens. It should not start or end with a hyphen.'
      required:
        - name
    OrganizationMetadata:
      title: Organization metadata
      x-stoplight:
        id: 08jgykhqykh7b
      description: Organization metadata. Represent generated fields.
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Organization ReportPortal identifier.
          minimum: 0
        type:
          type: string
          x-stoplight:
            id: 4nf6lordbrqag
          enum:
            - INTERNAL
            - PERSONAL
            - EXTERNAL
          description: |-
            Type for automatization purposes.

            There are three types:
            - INTERNAL: created by API request.
            - PERSONAL: created for a user after the user creating. Only Enterprise edition feature.
            - EXTERNAL: created for external integrations.
        external_id:
          type: string
          x-stoplight:
            id: m0wvgkfndhpag
          description: |-
            External organization identifier.
            It is created for integration.
        created_at:
          type: string
          x-stoplight:
            id: murxta40l19cz
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          x-stoplight:
            id: wy58s9p7s4l81
          format: date-time
          description: Last update date.
    OrganizationRelation:
      title: Organization relations
      x-stoplight:
        id: mvjaoy2fofepj
      type: object
      description: |-
        A relationship object contains members that represent a relationship of the organization.

        Represents [JSON:API relationships object](https://jsonapi.org/format/#document-resource-object-relationships). We use only `links` and `meta` objects.
      properties:
        relationships:
          type: object
          x-stoplight:
            id: yg04s1g3jh6hv
          properties:
            users:
              type: object
              x-stoplight:
                id: cpa37wk30kxvx
              description: General information about the organization users.
              properties:
                meta:
                  type: object
                  x-stoplight:
                    id: 51qv1trnu44je
                  properties:
                    count:
                      type: integer
                      x-stoplight:
                        id: b1ydil6hgddf0
                      minimum: 0
                      description: Total count of users in the organization.
            projects:
              type: object
              x-stoplight:
                id: swhkgx5x0ob26
              description: General information about the organization projects.
              properties:
                meta:
                  type: object
                  x-stoplight:
                    id: mmtw60hm0ykpc
                  properties:
                    count:
                      type: integer
                      x-stoplight:
                        id: itdaw7f7t6cy2
                      minimum: 0
                      description: Total count of projects in the organization.
            launches:
              type: object
              x-stoplight:
                id: yyim9qntk2t0n
              description: General information about the organization launches.
              properties:
                meta:
                  type: object
                  x-stoplight:
                    id: u1po8dndq7c8w
                  properties:
                    last_occurred_at:
                      type: string
                      x-stoplight:
                        id: jfrvcl95jb302
                      format: date-time
                      description: Last launch occurrence date.
                    count:
                      type: integer
                      x-stoplight:
                        id: 2sqo1glg2ksei
                      minimum: 0
                      description: |-
                        Total count of launches in the organization.
                        Access: Admin, Manager
            billing:
              type: object
              x-stoplight:
                id: wboblz9c0y6xl
              description: |-
                General information about the organization billing.
                Available only if a Billing plugin is enabled.
              properties:
                meta:
                  type: object
                  x-stoplight:
                    id: gaxjw82c62g8k
                  properties:
                    plan_name:
                      type: string
                      x-stoplight:
                        id: mo6pndjukp2hn
                      description: Plan name.
                    storage_usage:
                      type: integer
                      x-stoplight:
                        id: mmfbygmjnhg7y
                      minimum: 0
                      description: Storage usage in percents.
                      maximum: 100
    OrganizationUsersPage:
      title: List of organization users
      x-stoplight:
        id: 66kg4poe1y1gj
      allOf:
        - $ref: ../models/Offset.yaml
        - $ref: '#/components/schemas/OrganizationUsersList'
    OrganizationUsersList:
      title: OrganizationUsersList
      x-stoplight:
        id: gb5aqlrw1229a
      type: object
      properties:
        items:
          type: array
          x-stoplight:
            id: j8z1d5itvz11g
          items:
            $ref: '#/components/schemas/OrganizationUserInfo'
      required:
        - items
    OrganizationUserInfo:
      title: Organization user profile
      x-stoplight:
        id: mtgs7v0icru14
      allOf:
        - $ref: ../models/user/UserAccountInfo.yaml
        - $ref: '#/components/schemas/OrganizationUserAttributes'
        - $ref: '#/components/schemas/OrganizationUserMetadata'
        - $ref: '#/components/schemas/OrganizationUserRelation'
      description: A comprehensive set of user information related to a user's organization.
    OrganizationUserDefinition:
      title: Organization user definition
      x-stoplight:
        id: 0oor0xhjoj23w
      description: Base information about user in organization.
      type: object
      properties:
        email:
          type: string
          x-stoplight:
            id: egt4wyym3bgvt
          format: email
          description: User email. Unique ID in an organization.
    OrganizationUserAttributes:
      title: Organization user details
      x-stoplight:
        id: 5nqrewxfku9tn
      type: object
      description: Basic information about a user in the organization.
      properties:
        organization_role:
          type: string
          x-stoplight:
            id: 3v2e1cyby216c
          enum:
            - MEMBER
            - MANAGER
          description: Organization user role.
      required:
        - email
        - organization_role
    OrganizationUserMetadata:
      title: Organization user metadata
      x-stoplight:
        id: g7a81q7nu3zgo
      allOf:
        - x-stoplight:
            id: 3b9125n1gljg0
          properties:
            assigned_at:
              type: string
              x-stoplight:
                id: a7gp7z7wei0p6
              format: date-time
              description: |-
                A time when a user was assigned to
                the organization.
      description: User's organization metadata. Represent generated fields.
      type: object
    OrganizationUserRelation:
      title: Organization user relations
      x-stoplight:
        id: 0v55lmrhzuy8t
      type: object
      description: |-
        A relationship object contains members that represent a relationship of the user in the organization.

        Represents [JSON:API relationships object](https://jsonapi.org/format/#document-resource-object-relationships). We use only `links` and `meta` objects.
      properties:
        relationships:
          type: object
          x-stoplight:
            id: myt7sbqk6iyz5
          properties:
            projects:
              type: object
              x-stoplight:
                id: jijr6kx3dhi4n
              description: User's projects relations.
              properties:
                meta:
                  type: object
                  x-stoplight:
                    id: kh36jlb1u9opz
                  description: User's projects relation metadata.
                  properties:
                    count:
                      type: integer
                      x-stoplight:
                        id: acpl46w380az0
                      minimum: 0
                      description: |-
                        Total number of user's projects in
                        organization.
    OrganizationProjectsPage:
      title: List of organization projects
      x-stoplight:
        id: enov9cs27yo63
      allOf:
        - $ref: ../models/Offset.yaml
        - $ref: '#/components/schemas/OrganizationProjectsList'
    OrganizationProjectsList:
      title: OrganizationProjectsList
      x-stoplight:
        id: tgmoax768epah
      type: object
      properties:
        items:
          type: array
          x-stoplight:
            id: gy6rp66c3r4ja
          items:
            $ref: ../models/project/ProjectProfile.yaml
      required:
        - items
    OrganizationProjectInfo:
      title: OrganizationProjectInfo
      x-stoplight:
        id: 252q8n6hgyymb
      allOf:
        - $ref: ../models/project/ProjectMetadata.yaml
        - $ref: ../models/project/ProjectDetails.yaml
    OrganizationRetentionPolicy:
      title: Organization retention policy
      x-stoplight:
        id: vow5yfxq4xtdk
      type: object
      description: '#TODO'
      properties:
        log_retention_period:
          type: string
          x-stoplight:
            id: yhc9oev3lzd3x
          format: duration
          description: '#TODO'
        launch_retention_period:
          type: string
          x-stoplight:
            id: hgbjw8baqr7pd
          format: duration
          description: '#TODO'
        attachment_retention_period:
          type: string
          x-stoplight:
            id: 64yf88vs0o6pu
          format: duration
          description: '#TODO'
    OrganizationNotificationPolicy:
      title: Organization notification policy
      x-stoplight:
        id: 7n3016fxay9mo
      type: object
      properties:
        auto_notification:
          type: boolean
          x-stoplight:
            id: zi73b396he1hp
    OrganizationNotifyRulesList:
      title: List of organization notification rules
      x-stoplight:
        id: w0439pq86z8fy
      allOf:
        - $ref: ../models/Offset.yaml
        - type: object
          x-stoplight:
            id: rj6ft52tz1vis
          properties:
            items:
              type: array
              x-stoplight:
                id: 2zs7yqid6u08a
              items:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      description: ''
    OrganizationNotifyRule:
      title: Organization notification rule
      x-stoplight:
        id: l4gmpbqm9o282
      allOf:
        - type: object
          properties:
            id:
              type: string
            created_at:
              type: string
              x-stoplight:
                id: wfur0bro7bnox
              format: date-time
            updated_at:
              type: string
              x-stoplight:
                id: pcaygplw12pnq
              format: date-time
        - $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
    OrganizationNotifyRuleDefinition:
      title: Notification rule definition
      x-stoplight:
        id: wzds6axw03vkv
      type: object
      description: '#TODO'
      properties:
        name:
          type: string
          x-stoplight:
            id: pej9yl51jj2rr
          description: '#TODO'
        enabled:
          type: boolean
          x-stoplight:
            id: eljifjwy0myo9
          description: '#TODO'
        conditions:
          type: object
          x-stoplight:
            id: xiq7u96dbyi7c
          description: '#TODO'
          properties:
            launch:
              type: object
              x-stoplight:
                id: prbt6dqyptw5n
              description: '#TODO'
              properties:
                names:
                  type: array
                  x-stoplight:
                    id: oiz4yf9t3fujn
                  description: '#TODO'
                  items:
                    x-stoplight:
                      id: 764t84ztffx3b
                    type: string
                attributes:
                  type: array
                  x-stoplight:
                    id: 2y9ubm1ighepk
                  description: '#TODO'
                  items:
                    x-stoplight:
                      id: hjehsaosi9oyp
                    type: object
                    properties:
                      key:
                        type: string
                        x-stoplight:
                          id: 0pxjhtsyoibrf
                      value:
                        type: string
                        x-stoplight:
                          id: vd9a65e08xtu1
                attributes_operator:
                  type: string
                  x-stoplight:
                    id: 0w8fcw4ufcncl
                  enum:
                    - AND
                    - OR
                  default: AND
                  description: '#TODO'
                result_condition:
                  type: string
                  x-stoplight:
                    id: 1icft97s6w96o
                  enum:
                    - ALWAYS
                    - FAILED
                    - TO_INVESTIGATE
                    - MORE_10
                    - MORE_20
                    - MORE_50
                  description: '#TODO'
        actions:
          x-stoplight:
            id: 5kl2r7880cz8x
          allOf:
            - $ref: ../models/notify-actions/SendEmail.yaml
          description: '#TODO'
    OrganizationSearchCriteria:
      title: Organization search criteria
      x-stoplight:
        id: drxq3elc1z77d
      allOf:
        - x-stoplight:
            id: 89u53g8og5l72
          properties:
            sort:
              type: string
              x-stoplight:
                id: m0fd3k09tsrgh
              description: Field to define the sort field.
              default: name
            search_criteria:
              type: array
              x-stoplight:
                id: 6ziu9u87tafut
              items:
                x-stoplight:
                  id: suemb9qjah2wy
                type: object
                properties:
                  filter_key:
                    type: string
                    x-stoplight:
                      id: udhi6v0lp0c8f
                    enum:
                      - name
                      - slug
                      - type
                      - created_at
                      - updated_at
                      - Organization User
                      - Organization Project
                      - launches
                      - last_launch_occurred
      description: |-
        You can use the following attributes as a `search_criteria[*].filter_key` for filtering:

        - `name` - filter by organization name.
        - `slug` - filter by organization slug.
        - `type` - filter by organization type.
        - `created_at` - filter by creation date.
        - `updated_at` - filter by last update date.
        - `users` - filter by the number of users.
        - `projects` - filter by the number of projects.
        - `launches` - filter by the number of launches.
        - `last_launch_occurred` - filter by the last launch occurrence.
      type: object
    OrganizationProjectSearchCriteria:
      title: Organization project search criteria
      x-stoplight:
        id: q2jdc59cgjt2i
      allOf:
        - x-stoplight:
            id: bo5dkm7fkumbf
          properties:
            sort:
              type: string
              x-stoplight:
                id: bmgm4vyy7l1td
              description: Field to define the sort field.
              default: name
            search_criteria:
              type: array
              x-stoplight:
                id: 8rznd35ks5bwm
              items:
                x-stoplight:
                  id: al43f4acrsopv
                type: object
                properties:
                  filter_key:
                    type: string
                    x-stoplight:
                      id: dwoc58mjxkmql
                    enum:
                      - name
                      - slug
                      - key
                      - created_at
                      - updated_at
                      - Organization User
                      - launches
                      - last_launch_occurred
      description: |-
        You can use the following attributes as a `search_criteria[*].filter_key` for filtering:

        - `name` - filter by project name.
        - `slug` - filter by project slug.
        - `key` - filter by project key.
        - `created_at` - filter by creation date.
        - `updated_at` - filter by last update date.
        - `users` - filter by the number of users.
        - `launches` - filter by the number of launches.
        - `last_launch_occurred` - filter by the last launch occurrence.
      type: object
  parameters:
    OrganizationId:
      name: org_id
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Organization identifier

    UserId:
      name: user_id
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: User identifier
    ProjectId:
      name: project_id
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Project identifier
  securitySchemes:
    $ref: ../security/BearerAuth.yaml
security:
  - BearerAuth: []
tags:
  - name: Organization
    description: Organizations collection
  - name: Organization Project
    description: Organization projects collection
  - name: Organization User
    description: Organization users collection
  - name: In progress
    description: Endpoints that are in designing
  - name: Ready for implementation
    description: Endpoints that are ready for development
  - name: Implemented
    description: Endpoints that are implemented

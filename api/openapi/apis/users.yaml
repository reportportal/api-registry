openapi: 3.0.3
info:
  title: Users API
  version: '0.1'
  description: API Collection for working with users.
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: Reingold Shekhtel
    email: reingold_shekhtel@epam.com
servers:
  - url: '{protocol}://{authority}/{basePath}'
    description: ReportPortal server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol
      authority:
        default: demo.reportportal.io
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: api
        description: Base path of Report Portal API
paths:
  /invitations:
    post:
      summary: Create user invitation
      operationId: post-invitations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Invitation ID.
                    format: uuid
                  email:
                    type: string
                    description: User's email.
                  status:
                    type: string
                    enum:
                      - PENDING
                      - ACTIVATED
                    description: User invitations status.
                  link:
                    type: string
                    description: Link to invitation form.
                  created_at:
                    type: string
                    format: date-time
                    description: Creation date.
                  expires_at:
                    type: string
                    format: date-time
                    description: Experation date.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '503':
          description: Service Unavailable
      description: Create and send user invitation to email.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email for invitation.
                organizations:
                  type: array
                  description: Organizations to assign a user.
                  items:
                    $ref: ../models/user/UserOrgInfoWithProjects.yaml
              required:
                - email
        description: ''
      tags:
        - Invitation
    get:
      summary: Get invitations
      operationId: get-invitations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Offset.yaml
                  - $ref: '#/components/schemas/Invitations'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      parameters:
        - $ref: ../parameters/Pagination.yaml#/Offset
        - $ref: ../parameters/Pagination.yaml#/Limit
        - $ref: ../parameters/Pagination.yaml#/Order
        - schema:
            type: string
            default: email
          in: query
          name: sort
        - schema:
            type: string
            format: email
          in: query
          name: email
      description: Get all invitations
      tags:
        - Invitation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
  '/invitations/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get invitation
      tags:
        - Invitation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      operationId: get-invitations-id
      description: Get invitation by ID.
    put:
      summary: Activate invitation
      operationId: put-invitations-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Invitation ID.
                  user_id:
                    type: integer
                    format: int64
                    description: Created user ID.
                    minimum: 0
                  email:
                    type: string
                    format: email
                    description: User email.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Create user from invitation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - ACTIVATED
                    - PENDING
                  description: Change status to ACTIVATED to create a user.
                  default: PENDING
                email:
                  type: string
                  description: New email.
                  format: email
                full_name:
                  type: string
                  description: User full name.
                  maxLength: 60
                password:
                  type: string
                  format: password
                  description: |-
                    User password. Will be ignored for `PENDING` status.
                    Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character.
                  minLength: 8
                  maxLength: 256
                  pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).+$'
              required:
                - password
        description: ''
      tags:
        - Invitation
components:
  schemas:
    Invitation:
      title: Invitation
      type: object
      properties:
        id:
          type: string
          description: Invitation ID.
          format: uuid
        email:
          type: string
          description: User's email.
        status:
          type: string
          enum:
            - PENDING
          description: User invitations status.
        link:
          type: string
          description: Link to invitation form.
        created_at:
          type: string
          format: date-time
          description: Creation date.
        expires_at:
          type: string
          format: date-time
          description: Experation date.
    Invitations:
      title: InvitationsList
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
  securitySchemes:
    $ref: ../security/BearerAuth.yaml
security:
  - BearerAuth: []
tags:
  - name: In progress
    description: Endpoints that are in designing
  - name: Ready for implementation
    description: Endpoints that are ready for development
  - name: Implemented
    description: Endpoints that are implemented
  - name: Invitation
    description: User invitations

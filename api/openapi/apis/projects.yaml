openapi: 3.0.3
info:
  title: Projects API
  version: Organization
  description: API Collection for working with projects.
  contact:
    name: ReportPortal Team
    email: support@reportportal.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: '{protocol}://{authority}/{basePath}'
    description: ReportPortal server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol
      authority:
        default: demo.reportportal.io
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: api
        description: Base path of Report Portal API
security:
  - BearerAuth: []
paths:
  '/projects/{project_id}/users':
    parameters:
      - schema:
          type: string
        name: project_id
        in: path
        required: true
    post:
      summary: Assign user to project
      operationId: post-projects-project_id-users
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUser'
        description: ''
      description: ''
  '/projects/{project_id}/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: project_id
        in: path
        required: true
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    put:
      summary: Update project user
      operationId: put-projects-project_id-users-user_id
      responses:
        '204':
          description: No Content
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_role:
                  $ref: ../enums/projectRole.yaml
    delete:
      summary: Unassign user from project
      operationId: delete-projects-project_id-users-user_id
      responses:
        '200':
          description: OK
      description: |-
        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Member authority

        - `EDITOR` - can delete any user.
        - `VIEWER` - can delete themself.
  '/projects/{project_id}/groups':
    parameters:
      - schema:
          type: string
        name: project_id
        in: path
        required: true
    get:
      summary: Get all groups of a project
      operationId: getGroupsOfProject
      parameters:
        - $ref: ../parameters/Offset.yaml
        - $ref: ../parameters/Limit.yaml
        - $ref: ../parameters/Order.yaml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroupsPage'
      description: Get all groups of a project.
    post:
      summary: Add a group to a project
      operationId: addGroupToProject
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  $ref: ../types/identifier.yaml
                project_role:
                  $ref: ../enums/projectRole.yaml
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    ProjectUser:
      title: ProjectUser
      type: object
      properties:
        id:
          $ref: ../types/userId.yaml
        project_role:
          $ref: ../enums/projectRole.yaml
    ProjectGroupsPage:
      title: ProjectGroupsPage
      allOf:
        - $ref: ../models/Offset.yaml
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ProjectGroup'
    ProjectGroup:
      title: Project group
      description: Information about project group.
      type: object
      properties:
        project_role:
          $ref: ../enums/projectRole.yaml
        added_at:
          type: string
          format: date-time
          description: Timestamp of project adding to group.
          x-stoplight:
            id: 10gkz1piwd02r
        updated_at:
          type: string
          format: date-time
          description: Timestamp of project updating in group.
        group:
          $ref: ../models/group/Group.yaml
tags:
  - name: Projects
    description: Operations with projects

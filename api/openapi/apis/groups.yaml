openapi: 3.0.3
info:
  title: Groups API
  version: 1.0.0
  description: The Group collection API. You can use it to manage groups and members of groups.
  contact:
    name: ReportPortal
    email: support@reportportal.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: '{host}{basePath}'
    description: ReportPortal server
    variables:
      host:
        default: 'https://demo.reportportal.io'
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: /api
        description: Base path of Report Portal API
security:
  - BearerAuth: []
paths:
  /groups:
    get:
      summary: Get all groups
      operationId: getGroups
      x-permissions:
        - role: ADMINISTRATOR
          access: full
      tags:
        - Groups
      description: |-
        Get instance groups with optional filtering and sorting.

        ### Authority

        - `ADMINISTRATOR`
      parameters:
        - $ref: ../parameters/Offset.yaml
        - $ref: ../parameters/Limit.yaml
        - $ref: ../parameters/Order.yaml
        - schema:
            type: string
            default: name
          in: query
          name: sort
          description: Indicate sort by field.
        - schema:
            type: integer
            format: int64
            minimum: 0
          in: query
          name: orgId
          description: Organization identifier.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPage'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
    post:
      summary: Create a group
      operationId: createGroup
      x-permissions:
        - role: ADMINISTRATOR
          access: full
      tags:
        - Groups
      description: |-
        Create a group.

        ### Authority

        - `ADMINISTRATOR`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/group/GroupInfo.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '409':
          $ref: '#/components/responses/Error'
  '/groups/{group_id}':
    parameters:
      - $ref: ../parameters/GroupId.yaml
    get:
      summary: Get group
      operationId: getGroupById
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Get a group by ID.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/group/GroupInfo.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
    put:
      summary: Update group
      operationId: updateGroup
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Update a group by ID.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
      responses:
        '200':
          $ref: '#/components/responses/Update'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '409':
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete group
      operationId: deleteGroup
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Delete a group by ID.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
  '/groups/{group_id}/users':
    parameters:
      - $ref: ../parameters/GroupId.yaml
    get:
      summary: Get all group users
      operationId: getGroupUsers
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Get all users of group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      parameters:
        - $ref: ../parameters/Offset.yaml
        - $ref: ../parameters/Limit.yaml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUsersPage'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
  '/groups/{group_id}/users/{user_id}':
    parameters:
      - $ref: ../parameters/GroupId.yaml
      - $ref: ../parameters/UserId.yaml
    get:
      summary: Get group user
      operationId: getGroupUserById
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Get all users of group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserInfo'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete group user
      operationId: deleteUserFromGroupById
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Delete a user from a group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
    put:
      summary: Add group user
      operationId: addUserToGroupById
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Add user into group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '200':
          $ref: '#/components/responses/Update'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
  '/groups/{group_id}/projects':
    parameters:
      - $ref: ../parameters/GroupId.yaml
    get:
      summary: Get all group projects
      operationId: getGroupProjects
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Get all projects of group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      parameters:
        - $ref: ../parameters/Offset.yaml
        - $ref: ../parameters/Limit.yaml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjectsPage'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
  '/groups/{group_id}/projects/{project_id}':
    parameters:
      - $ref: ../parameters/GroupId.yaml
      - $ref: ../parameters/ProjectId.yaml
    get:
      summary: Get group project
      operationId: getGroupProjectById
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Get project of group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjectInfo'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
    put:
      summary: Add or update group project
      operationId: addProjectToGroupById
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Add or update project in group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '200':
          $ref: '#/components/responses/Update'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  $ref: ../enums/projectRole.yaml
    delete:
      summary: Delete group project
      operationId: deleteProjectFromGroupById
      x-permissions:
        - role: ADMINISTRATOR
          access: full
        - role: MANAGER
          access: restricted
          description: Access to groups when assigned to an organization.
      tags:
        - Groups
      description: |-
        Delete project from group.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER` : Access to groups when assigned to an organization.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '402':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
components:
  schemas:
    GroupPage:
      title: Group page
      description: Page of groups.
      type: object
      allOf:
        - $ref: ../models/Offset.yaml
        - properties:
            items:
              type: array
              description: List of groups.
              items:
                $ref: ../models/group/GroupInfo.yaml
    CreateGroupRequest:
      title: Create group request
      description: Create group request.
      allOf:
        - $ref: ../models/group/GroupBase.yaml
        - type: object
          properties:
            org_id:
              type: integer
              format: int64
              description: Organization identifier.
          required:
            - org_id
    UpdateGroupRequest:
      title: Update group request
      description: Update group request.
      allOf:
        - $ref: ../models/group/GroupBase.yaml
    GroupUsersPage:
      title: Group users page
      description: Page of group users.
      allOf:
        - $ref: ../models/Offset.yaml
        - type: object
          properties:
            items:
              type: array
              description: List of group users.
              items:
                $ref: '#/components/schemas/GroupUserInfo'
    GroupProjectsPage:
      title: Group projects page
      allOf:
        - $ref: ../models/Offset.yaml
        - type: object
          properties:
            items:
              type: array
              description: List of group projects.
              items:
                $ref: '#/components/schemas/GroupProjectInfo'
      description: Page of group projects.
    GroupUserInfo:
      title: Group user
      description: Information about a user as a group member.
      type: object
      properties:
        id:
          $ref: ../types/identifier.yaml
        uuid:
          type: string
          format: uuid
          description: User identifier for external systems.
        email:
          type: string
          format: email
          description: User email.
        full_name:
          $ref: ../types/name.yaml
        external_id:
          type: string
          description: External user identifier.
        instance_role:
          $ref: ../enums/instanceRole.yaml
        active:
          type: boolean
          description: User activity status.
        account_type:
          $ref: ../enums/accountType.yaml
        added_at:
          type: string
          format: date-time
          description: Timestamp of user adding to group.
    GroupProjectInfo:
      title: Group project
      description: Information about a project as a group member.
      type: object
      properties:
        id:
          $ref: ../types/identifier.yaml
        name:
          $ref: ../types/name.yaml
        permission:
          $ref: ../enums/projectRole.yaml
        added_at:
          type: string
          format: date-time
          description: Timestamp of project adding to group.
        updated_at:
          type: string
          format: date-time
          description: Timestamp of project updating in group.
  responses:
    Error:
      description: Error problem response
      content:
        application/problem+json:
          schema:
            $ref: ../models/Problem.yaml
    Update:
      description: Successful update response
      content:
        application/json:
          schema:
            title: Successful update
            type: object
            properties:
              message:
                type: string
                default: The update was completed successfully.
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Groups
    description: Group API collection

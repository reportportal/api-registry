openapi: 3.0.3
info:
  title: ReportPortal Plugins API
  version: 1.0.0
  description: The Plugins API. You can use it to make commands related to plugins.
  contact:
    name: ReportPortal
    email: support@reportportal.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: '{host}{basePath}'
    description: ReportPortal server
    variables:
      host:
        default: 'https://demo.reportportal.io'
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: /api
        description: Base path of Report Portal API
security:
  - BearerAuth: []
paths:
  '/plugins/{plugin_name}/commands/{command_name}':
    post:
      summary: Execute a plugin command
      operationId: executePluginCommand
      description: |-
        Execute a command in a plugin within a given context.

        This universal endpoint supports global, organization, and project contexts.
        Use the `context.scope` field to specify where to execute the command and
        provide the corresponding identifiers when required.

        - `GLOBAL`: No identifiers required.
        - `ORGANIZATION`: Provide `org_id`.
        - `PROJECT`: Provide `org_id` (if applicable for your setup) and `project_id`.

        When `context` is omitted, the command runs in the `GLOBAL` scope.
      tags:
        - plugins
      parameters:
        - in: path
          name: plugin_name
          required: true
          schema:
            type: string
          description: Plugin name identifier.
        - in: path
          name: command_name
          required: true
          schema:
            type: string
          description: Command name identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginCommandRQ'
      responses:
        '200':
          description: Command executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginCommandRS'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
components:
  schemas:
    PluginCommandContext:
      title: Plugin command context
      type: object
      properties:
        scope:
          $ref: ../enums/contextScope.yaml
        org_id:
          $ref: ../types/identifier.yaml
          description: Organization identifier; required for ORGANIZATION; optional for PROJECT (if applicable).
        project_id:
          $ref: ../types/identifier.yaml
          description: Project identifier; required for PROJECT scope.
      description: Context parameters defining where the command should be executed.
    PluginCommandRQ:
      title: Plugin command request
      type: object
      description: Request payload to execute a plugin command in a given context.
      properties:
        context:
          $ref: '#/components/schemas/PluginCommandContext'
        arguments:
          type: object
          description: Arbitrary parameters for the command.
    PluginCommandRS:
      title: Plugin command response
      type: object
      properties:
        status:
          type: string
          enum:
            - SUCCESS
            - FAILED
          description: Execution status provided by the plugin.
        message:
          type: string
          description: Optional human-readable description from the plugin.
        result:
          type: object
          additionalProperties: true
          description: Plugin-defined response payload.
      description: Response payload returned after executing a plugin command.
  responses:
    Error:
      description: Error problem response
      content:
        application/problem+json:
          schema:
            $ref: ../models/Problem.yaml
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
tags:
  - name: plugins
    description: API for executing commands related to plugins.

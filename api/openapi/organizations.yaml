openapi: 3.0.3
x-stoplight:
  id: hpx2e63mc8gcc
info:
  title: Organizations
  version: '0.1'
  description: Organizations API Collection
  contact:
    name: Reingold Shekhtel
    email: reingold_shekhtel@epam.com
servers:
  - url: '{protocol}://{authority}/{basePath}'
    description: ReportPortal server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol
      authority:
        default: demo.reportportal.io
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: api
        description: Base path of Report Portal API
paths:
  /organizations:
    get:
      summary: Get a list of organizations
      tags:
        - Organizations
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProfilesList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./models/Problem.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations
      description: |-
        Get a list of existing organizations.

        ### Authority

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Access level

        - `ADMINISTRATOR` - no restrictons.
        - `MANAGER` - limited to viewing only their assigned organizations.
        - `MEMBER` - limited access:
          - can view only their assigned organizations.
          - restricted access to organization profile relationships.
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
        - schema:
            type: string
          in: query
          name: name
          description: Filter organizations by name
        - schema:
            type: string
            pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          in: query
          name: slug
          description: Filter organizations by slug
    post:
      summary: Create a new organization
      operationId: post-organizations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Create a new organization. Provide name and slug.

        ### Authority: 

        - `ADMINISTRATOR`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: 'You can create an organization provide name and slug. If the `slug` is not provided, it will be generated from the `name`.'
      tags:
        - Organizations
        - Ready for implementation
  '/organizations/{org_id}':
    get:
      summary: Get organization information
      tags:
        - Organizations
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProfile'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations-org_id
      description: |-
        Provide organization information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    put:
      summary: Update organization
      operationId: put-organizations-org_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: hiod6ajoz3rrg
                    default: The organization update was completed successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Update organization information with the provided data.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: Provide organization information for update.
      tags:
        - Organizations
        - Ready for implementation
      x-internal: false
    patch:
      summary: Partial organization update
      operationId: patch-organizations-org_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: y1kxomqmeigfg
                    default: The organization update was completed successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Particular organization fields update via the [JSON Merge Patch standard](https://datatracker.ietf.org/doc/html/rfc7386).

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: 'Use PATCH with JSON Merge Patch standard, a specialized media type application/merge-patch+json for partial resource representation to update parts of resource objects.'
      tags:
        - Organizations
        - Ready for implementation
      x-internal: false
    delete:
      summary: Delete organization
      operationId: delete-organizations-org_id
      responses:
        '204':
          description: No Content
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Delete organization by identifier.

        ### Authority:

        - `ADMINISTRATOR`
      tags:
        - Organizations
        - Ready for implementation
      x-internal: false
  '/organizations/{org_id}/users':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: Get organization's users
      tags:
        - Users
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUsersList'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations-org_id-users
      description: |-
        Provides a list of organzation's users.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
    post:
      summary: Assignment user to organization
      operationId: post-organizations-org_id-users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/EventStatus.yaml
        '207':
          description: Multi-Status (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserAssignmentStatuses'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |-
        This is a complex endpoint that provides a flow for assigning a user to the organization.
        It can be used as a bulk endpoint if you provide a list of projects for assignment.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Project authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `EDITOR`

        ### Assignment rules

        #### For assignment user to the organization:

        A user with the `MEMBER` role can assign only users with the `MEMBER` role.

        #### For assignment user to the organization's projects:

        A users with the `ADMINISTRATOR`, `MANAGER`, and `MEMBER` with `EDITOR` roles can assign
        users to the organization's projects.

        ### Response event statuses

        You will get different statuses for project assignments according to which user you want
        to assign to the organization:

        - `PENDING` or `FAILURE` for non-existing users.
        - `SUCCESS` or `FAILURE` for existing users.

        Items contain statuses for each event. Inside the event, you can find the `id` that links
        to the identifier you provided in the request.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserAssignment'
        description: Definition for a user assignment.
      tags:
        - Users
        - Ready for implementation
  '/organizations/{org_id}/users/{user_id}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get organization user profile
      tags:
        - Users
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrganizationUserProfile'
                  - $ref: ./models/EventStatus.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations-org_id-users-user_id
      description: |-
        Get organization user profile.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with `MEMBER` role can get only his profile.

        ### Member authority:

        - `EDITOR`
        - `VIEWER`
    put:
      summary: Update organization user details
      operationId: put-organizations-org_id-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 4rm267zsfzu58
                    default: The user's role in the organization has been updated.
        '207':
          description: |-
            Multi-Status (WebDAV)

            Response for a user assignment with projects.
          content:
            application/json:
              schema:
                allOf:
                  - x-stoplight:
                      id: vz0j5aismjjdv
                    properties:
                      message:
                        type: string
                        x-stoplight:
                          id: qq0wvtnebtzyb
                        default: The user's role in the organization has been updated.
                  - properties:
                      statuses:
                        x-stoplight:
                          id: nxwqi2ot8md9m
                        type: array
                        description: |-
                          Change statuses for projects.
                          For cases when a user is assigned projects.
                        items:
                          $ref: ./models/EventStatus.yaml
                type: object
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserDefinition'
        description: Provide organization's user information for update.
      tags:
        - Users
        - Ready for implementation
      description: |-
        Update organization user details.

        Organization user details for update.

        You can provide a project list as an additional option for assigning or unassigned
        a user from projects.

        ### Organization authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Project authority:

        - `EDITOR`
    patch:
      summary: Partial organization user update
      operationId: patch-organizations-org_id-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: zbdjojwwvcpma
                    default: The user's role in the organization has been updated.
        '207':
          description: |-
            Multi-Status (WebDAV)

            Response for a user assignment with projects.
          content:
            application/json:
              schema:
                allOf:
                  - x-stoplight:
                      id: tt0m9r127vs2z
                    properties:
                      message:
                        type: string
                        x-stoplight:
                          id: 6lc772ylkoq6r
                        default: The user's role in the organization has been updated.
                  - x-stoplight:
                      id: ktzksl9dz8ii1
                    properties:
                      statuses:
                        type: array
                        x-stoplight:
                          id: 3ujdjt3ivvssf
                        description: |-
                          Change statuses for projects.
                          For cases when a user is assigned projects.
                        items:
                          $ref: ./models/EventStatus.yaml
                type: object
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrganizationUserDefinition'
        description: 'Use PATCH with JSON Merge Patch standard, a specialized media type application/merge-patch+json for partial resource representation to update parts of resource objects.'
      description: |-
        Partial organization user update.

        You can provide a project list as an additional option for assigning or unassigned
        a user from projects.

        ### Organization authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Project authority:

        - `EDITOR`
      tags:
        - Users
        - Ready for implementation
    delete:
      summary: Unassigned organization user
      operationId: delete-organizations-org_id-users-user_id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |-
        Unassigned user from an organization and all organization projects.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      tags:
        - Users
        - Ready for implementation
  '/organizations/{org_id}/projects':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: Get organization projects
      tags:
        - Projects
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProjectsList'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations-org_id-projects
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
        - schema:
            type: string
          in: query
          name: name
          description: Filter projects by name
        - schema:
            type: string
            pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          in: query
          name: slug
          description: Filter projects by slug
      description: |-
        Get a list of organization projects.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Access level

        - `ADMINISTRATOR` - no restrictions.
        - `MANAGER` - no restrictions.
        - `MEMBER` - restricted to viewing only their assigned projects.
    post:
      summary: Create a new project
      tags:
        - Projects
        - Ready for implementation
      operationId: post-organizations-org_id-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/project/ProjectInfo.yaml
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |-
        Create a new project in the organization. 

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/project/ProjectDetails.yaml
        description: 'You can create an project provide name and slug. If the `slug` is not provided, it will be generated from the `name`.'
  '/organizations/{org_id}/projects/{project_id}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
    get:
      summary: Get project information
      tags:
        - Projects
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/project/ProjectProfile.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations-org_id-projects-project_id
      description: |-
        Get project information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can get only his project.

        ### Member authority:

        - 'EDITOR'
        - 'VIEWER'
    put:
      summary: Update project
      operationId: put-organizations-org_id-projects-project_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/project/ProjectInfo.yaml
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/project/ProjectDetails.yaml
      description: |-
        Update project information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can update only his project.

        ### Member authority:

        - `EDITOR`
      tags:
        - Projects
        - Ready for implementation
    patch:
      summary: Partial project update
      operationId: patch-organizations-org_id-projects-project_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/project/ProjectInfo.yaml
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: ./models/project/ProjectDetails.yaml
        description: 'Use PATCH with JSON Merge Patch standard, a specialized media type application/merge-patch+json for partial resource representation to update parts of resource objects.'
      description: |-
        Partial project update.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can update only his project.

        ### Member authority:

        - `EDITOR`
      tags:
        - Projects
        - Ready for implementation
    delete:
      summary: Delete project
      tags:
        - Projects
        - Ready for implementation
      operationId: delete-organizations-org_id-projects-project_id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: |-
        Delete project.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
  '/organizations/{org_id}/settings':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: '#TODO'
      tags:
        - TODO
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  retention_policy:
                    $ref: '#/components/schemas/OrganizationRetentionPolicy'
                  notification_policy:
                    $ref: '#/components/schemas/OrganizationNotificationPolicy'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: 'Not Found: Organization not found.'
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations-org_id-settings
      description: '#TODO'
  '/organizations/{org_id}/settings/{setting_name}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - schema:
          type: string
          enum:
            - retention-policy
            - notification-policy
        name: setting_name
        in: path
        required: true
        description: Specific setting name
    get:
      summary: '#TODO'
      tags:
        - TODO
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                  - $ref: '#/components/schemas/OrganizationNotificationPolicy'
                description: '#TODO'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: 'Not Found: Organization or setting not found.'
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      operationId: get-organizations-org_id-settings-setting_name
      description: '#TODO'
    put:
      summary: '#TODO'
      operationId: put-organizations-org_id-settings-setting_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 7uyn7ehgi6ovb
              examples:
                Retention policy:
                  value:
                    id: retention-policy
                    status: SUCCESS
                    description: Retention policy updated successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: ./models/Problem.yaml
      description: '#TODO'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
          application/xml:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
    patch:
      summary: '#TODO'
      operationId: patch-organizations-org_id-settings-setting_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: ic96azfhunvje
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
      description: '#TODO'
  '/organizations/{org_id}/notification-rules':
    parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - TODO
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRulesList'
      operationId: get-organizations-org_id-notification-rules
      description: '#TODO'
    post:
      summary: '#TODO'
      operationId: post-organizations-org_id-notification-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
  '/organizations/{org_id}/notification-rules/{notify_rule_id}':
    parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
      - schema:
          type: string
        name: notify_rule_id
        in: path
        required: true
    get:
      summary: '#TODO'
      tags:
        - TODO
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      operationId: get-organizations-org_id-notifications-rules-rule_id
      description: '#TODO'
    put:
      summary: '#TODO'
      operationId: put-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 925zkivx5dclj
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
    patch:
      summary: '#TODO'
      operationId: patch-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 8maqxc1fpt87t
      description: '#TODO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
    delete:
      summary: '#TODO'
      operationId: delete-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '204':
          description: No Content
      description: '#TODO'
components:
  schemas:
    OrganizationProfile:
      title: Organization profile
      x-stoplight:
        id: lzs7p3khz8n9d
      description: A comprehensive set of organization information.
      allOf:
        - $ref: '#/components/schemas/OrganizationInfo'
        - type: object
          x-stoplight:
            id: xxy7z5blvo389
          properties:
            relationships:
              $ref: '#/components/schemas/OrganizationRelation'
    OrganizationProfilesList:
      title: OrganizationProfileList
      x-stoplight:
        id: qhues3miswoao
      allOf:
        - $ref: ./models/Offset.yaml
        - type: object
          x-stoplight:
            id: 47wlz4hpcqq6m
          properties:
            items:
              type: array
              x-stoplight:
                id: 7udfw4feoc516
              items:
                $ref: '#/components/schemas/OrganizationProfile'
    OrganizationInfo:
      title: Organization
      x-stoplight:
        id: x7vdhfbeaz5pu
      description: Various information about the organization information.
      allOf:
        - $ref: '#/components/schemas/OrganizationDetails'
        - $ref: '#/components/schemas/OrganizationMetadata'
    OrganizationDetails:
      title: Organization definition
      x-stoplight:
        id: 2gyt1v3d2gfmm
      description: |
        Basic information provided by the client.

        A `slug` is a unique identifying part of an organization. Generated according to the organization name if not specified by the user.
      allOf:
        - type: object
          properties:
            name:
              type: string
              x-stoplight:
                id: dz5igu0m6iy9o
              description: Organization display name.
              minLength: 1
          required:
            - name
        - $ref: ./models/Slug.yaml
    OrganizationMetadata:
      title: Organization metadata
      x-stoplight:
        id: 08jgykhqykh7b
      description: Organization metadata. Represent generated fields.
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Organization ReportPortal identifier.
          minimum: 0
        type:
          type: string
          x-stoplight:
            id: 4nf6lordbrqag
          enum:
            - INTERNAL
            - PERSONAL
            - EXTERNAL
          description: |-
            Type for automatization purposes.

            There are three types:
            - INTERNAL: created by API request.
            - PERSONAL: created for a user after the user creating. Only Enterprise edition feature.
            - EXTERNAL: created for external integrations.
        external_id:
          type: string
          x-stoplight:
            id: m0wvgkfndhpag
          description: |-
            External organization identifier.
            It is created for integration.
        created_at:
          type: string
          x-stoplight:
            id: murxta40l19cz
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          x-stoplight:
            id: wy58s9p7s4l81
          format: date-time
          description: Last update date.
    OrganizationRelation:
      title: Organization relations
      x-stoplight:
        id: mvjaoy2fofepj
      type: object
      description: |-
        A relationship object contains members that represent a relationship of the organization.
        Provided only for `Administrator` and `Manager`.

        Represents [JSON:API relationships object](https://jsonapi.org/format/#document-resource-object-relationships). We use only `links` and `meta` objects.
      properties:
        users:
          type: object
          x-stoplight:
            id: krjw7vjy2izad
          description: General information about the organization users.
          properties:
            meta:
              type: object
              x-stoplight:
                id: d6fwspiop6x0l
              properties:
                count:
                  type: integer
                  x-stoplight:
                    id: hjzuzo3w0fblt
                  minimum: 0
                  description: Total count of users in the organization.
        projects:
          type: object
          x-stoplight:
            id: ccus3qpgo1r30
          description: General information about the organization projects.
          properties:
            meta:
              type: object
              x-stoplight:
                id: ez4r3fb2cr2ts
              properties:
                count:
                  type: integer
                  x-stoplight:
                    id: 1l7k5p1fnlpfv
                  minimum: 0
                  description: Total count of projects in the organization.
        launches:
          type: object
          x-stoplight:
            id: mwmj5j0ckj15e
          description: General information about the organization launches.
          properties:
            meta:
              type: object
              x-stoplight:
                id: s2lmbnao0c7sw
              properties:
                last_occurred_at:
                  type: string
                  x-stoplight:
                    id: l5t9kyok3gjee
                  format: date-time
                  description: Last launch occurrence date.
                count:
                  type: integer
                  x-stoplight:
                    id: xbg55uxoz8nle
                  minimum: 0
                  description: |-
                    Total count of launches in the organization.
                    Access: Admin, Manager
        billing:
          type: object
          x-stoplight:
            id: 2dmd4f0yulayn
          description: |-
            General information about the organization billing.
            Available only if a Billing plugin is enabled.
          properties:
            meta:
              type: object
              x-stoplight:
                id: kycmg6uetm4ny
              properties:
                plan_name:
                  type: string
                  x-stoplight:
                    id: an0sg4e2taicm
                  description: Plan name.
                storage_usage:
                  type: integer
                  x-stoplight:
                    id: kfsaova2wetdj
                  minimum: 0
                  description: Storage usage in percents.
                  maximum: 100
    OrganizationUsersList:
      title: OrganizationUserList
      x-stoplight:
        id: 66kg4poe1y1gj
      allOf:
        - $ref: ./models/Offset.yaml
        - type: object
          x-stoplight:
            id: mkscp9pmtpyfo
          properties:
            items:
              type: array
              x-stoplight:
                id: idwchd8i25mof
              items:
                $ref: '#/components/schemas/OrganizationUserProfile'
    OrganizationUserAssignment:
      title: Organization user assignment
      x-stoplight:
        id: do613cpv1l3mq
      allOf:
        - type: object
          x-stoplight:
            id: 2uhe2kffvezvt
          properties:
            email:
              type: string
              x-stoplight:
                id: sufi4vxtjz3kw
              format: email
              description: User email for assignment.
          required:
            - email
        - $ref: '#/components/schemas/OrganizationUserDefinition'
      description: Definition for a user assignment to the organization.
    OrganizationUserDefinition:
      title: Organization user definition
      x-stoplight:
        id: u52hc1apf7q2q
      allOf:
        - $ref: '#/components/schemas/OrganizationUserDetails'
        - type: object
          x-stoplight:
            id: nh1gunacinw5v
          properties:
            projects:
              x-stoplight:
                id: 7qf3duno409l9
              type: array
              description: |-
                List of projects for user assignment.
                It's optional; you can assign the user 
                to an organization without projects.
              items:
                $ref: ./models/user/UserProjectDefinition.yaml
      description: Base information about a user in an organization.
    OrganizationUserProfile:
      title: Organization user profile
      x-stoplight:
        id: mtgs7v0icru14
      allOf:
        - $ref: '#/components/schemas/OrganizationUserInfo'
        - $ref: ./models/user/UserAccountInfo.yaml
        - type: object
          x-stoplight:
            id: ryd1bkgqoi60r
          properties:
            relationships:
              $ref: '#/components/schemas/OrganizationUserRelation'
      description: A comprehensive set of user information related to a user's organization.
    OrganizationUserInfo:
      title: Organization user information
      x-stoplight:
        id: snwrtcmq8wvt1
      allOf:
        - $ref: '#/components/schemas/OrganizationUserDetails'
        - $ref: '#/components/schemas/OrganizationUserMetadata'
      description: Related information about a user in the organization.
    OrganizationUserDetails:
      title: Organization user details
      x-stoplight:
        id: 5nqrewxfku9tn
      type: object
      description: Basic information about a user in the organization.
      properties:
        role:
          type: string
          x-stoplight:
            id: 3v2e1cyby216c
          enum:
            - MEMBER
            - MANAGER
          description: Organization user role.
      required:
        - role
    OrganizationUserMetadata:
      title: Organization user metadata
      x-stoplight:
        id: g7a81q7nu3zgo
      allOf:
        - x-stoplight:
            id: 3b9125n1gljg0
          properties:
            assigned_at:
              type: string
              x-stoplight:
                id: a7gp7z7wei0p6
              format: date-time
              description: |-
                A time when a user was assigned to
                the organization.
      description: User's organization metadata. Represent generated fields.
      type: object
    OrganizationUserRelation:
      title: Organization user relations
      x-stoplight:
        id: 0v55lmrhzuy8t
      type: object
      description: |-
        A relationship object contains members that represent a relationship of the user in the organization.

        Represents [JSON:API relationships object](https://jsonapi.org/format/#document-resource-object-relationships). We use only `links` and `meta` objects.
      properties:
        projects:
          type: object
          x-stoplight:
            id: liq2focmyttih
          description: User's projects relations.
          properties:
            meta:
              type: object
              x-stoplight:
                id: p06xmlipg4irk
              description: User's projects relation metadata.
              properties:
                count:
                  type: integer
                  x-stoplight:
                    id: 3tcj2ts8foup5
                  minimum: 0
                  description: |-
                    Total number of user's projects in
                    organization.
    OrganizationProjectsList:
      title: OrganizationProjectsList
      x-stoplight:
        id: enov9cs27yo63
      allOf:
        - $ref: ./models/Offset.yaml
        - type: object
          x-stoplight:
            id: 5esw685nrwg63
          properties:
            items:
              type: array
              x-stoplight:
                id: n80ynhp4r7gpz
              items:
                $ref: ./models/project/ProjectProfile.yaml
    OrganizationRetentionPolicy:
      title: Organization retention policy
      x-stoplight:
        id: vow5yfxq4xtdk
      type: object
      description: '#TODO'
      properties:
        log_retention_period:
          type: string
          x-stoplight:
            id: yhc9oev3lzd3x
          format: duration
          description: '#TODO'
        launch_retention_period:
          type: string
          x-stoplight:
            id: hgbjw8baqr7pd
          format: duration
          description: '#TODO'
        attachment_retention_period:
          type: string
          x-stoplight:
            id: 64yf88vs0o6pu
          format: duration
          description: '#TODO'
    OrganizationNotificationPolicy:
      title: Organization notification policy
      x-stoplight:
        id: 7n3016fxay9mo
      type: object
      properties:
        auto_notification:
          type: boolean
          x-stoplight:
            id: zi73b396he1hp
    OrganizationNotifyRulesList:
      title: OrganizationNotifyRulesList
      x-stoplight:
        id: w0439pq86z8fy
      allOf:
        - $ref: ./models/Offset.yaml
        - type: object
          x-stoplight:
            id: rj6ft52tz1vis
          properties:
            items:
              type: array
              x-stoplight:
                id: 2zs7yqid6u08a
              items:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      description: ''
    OrganizationNotifyRule:
      title: OrganizationNotificationRule
      x-stoplight:
        id: l4gmpbqm9o282
      allOf:
        - type: object
          properties:
            id:
              type: string
            created_at:
              type: string
              x-stoplight:
                id: wfur0bro7bnox
              format: date-time
            updated_at:
              type: string
              x-stoplight:
                id: pcaygplw12pnq
              format: date-time
        - $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
    OrganizationNotifyRuleDefinition:
      title: Notification rule definition
      x-stoplight:
        id: wzds6axw03vkv
      type: object
      description: '#TODO'
      properties:
        name:
          type: string
          x-stoplight:
            id: pej9yl51jj2rr
          description: '#TODO'
        enabled:
          type: boolean
          x-stoplight:
            id: eljifjwy0myo9
          description: '#TODO'
        conditions:
          type: object
          x-stoplight:
            id: xiq7u96dbyi7c
          description: '#TODO'
          properties:
            launch:
              type: object
              x-stoplight:
                id: prbt6dqyptw5n
              description: '#TODO'
              properties:
                names:
                  type: array
                  x-stoplight:
                    id: oiz4yf9t3fujn
                  description: '#TODO'
                  items:
                    x-stoplight:
                      id: 764t84ztffx3b
                    type: string
                attributes:
                  type: array
                  x-stoplight:
                    id: 2y9ubm1ighepk
                  description: '#TODO'
                  items:
                    x-stoplight:
                      id: hjehsaosi9oyp
                    type: object
                    properties:
                      key:
                        type: string
                        x-stoplight:
                          id: 0pxjhtsyoibrf
                      value:
                        type: string
                        x-stoplight:
                          id: vd9a65e08xtu1
                attributes_operator:
                  type: string
                  x-stoplight:
                    id: 0w8fcw4ufcncl
                  enum:
                    - AND
                    - OR
                  default: AND
                  description: '#TODO'
                result_condition:
                  type: string
                  x-stoplight:
                    id: 1icft97s6w96o
                  enum:
                    - ALWAYS
                    - FAILED
                    - TO_INVESTIGATE
                    - MORE_10
                    - MORE_20
                    - MORE_50
                  description: '#TODO'
        actions:
          x-stoplight:
            id: 5kl2r7880cz8x
          allOf:
            - $ref: ./models/notify-actions/SendEmail.yaml
          description: '#TODO'
    OrganizationPluginInfo:
      title: Organization plugin info
      x-stoplight:
        id: f0p1ux5joqai3
      type: object
      description: '#TODO'
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          description: '#TODO'
        name:
          type: string
          x-stoplight:
            id: lxowtpinnxi2i
          description: '#TODO'
        description:
          type: string
          x-stoplight:
            id: 5foc3fxle75f8
          description: '#TODO'
        version:
          type: string
          x-stoplight:
            id: ewqbneodpbu0p
          description: '#TODO'
        groups:
          type: array
          x-stoplight:
            id: 78va080k1m3sb
          description: '#TODO'
          items:
            x-stoplight:
              id: qtcmmsrnlarmj
            type: string
            enum:
              - BTS
              - NOTIFICATION
              - OTHER
              - AUTH
        configured:
          type: boolean
          x-stoplight:
            id: 4vy27s8wo5bwc
          description: '#TODO'
        configuration_type:
          type: string
          x-stoplight:
            id: 65cxbgcmfxhq5
          enum:
            - SINGLE
            - MULTIPLE
          description: '#TODO'
        created_at:
          type: string
          x-stoplight:
            id: 83f3uddm8eenm
          format: date-time
          description: '#TODO'
        assets:
          type: object
          x-stoplight:
            id: i89uf139hm8wf
          description: '#TODO'
          properties:
            icon:
              type: string
              x-stoplight:
                id: cw8lbnlyjahri
              default: plugin-icon.svg
            main:
              type: string
              x-stoplight:
                id: acbh0e2bjrti9
            descriptor:
              type: string
              x-stoplight:
                id: 2cknhgw03bsi3
              default: metadata.json
        links:
          type: object
          x-stoplight:
            id: jx9xyfsbbbs9k
          description: '#TODO'
          properties:
            source:
              $ref: ./models/Link.yaml
            documentation:
              $ref: ./models/Link.yaml
        commands:
          type: object
          x-stoplight:
            id: 5jh368p3nqpdr
          description: '#TODO'
          properties:
            common:
              type: array
              x-stoplight:
                id: 4fd17ylx0o3vc
              items:
                x-stoplight:
                  id: fpjdzs8czm0sz
                type: string
            allowed:
              type: array
              x-stoplight:
                id: 0da3mv1exbd80
              items:
                x-stoplight:
                  id: lndqx1s8gomqe
                type: string
        details:
          type: object
          x-stoplight:
            id: carch0mzjh2dl
          description: '#TODO Legasy'
          properties:
            meta:
              type: object
              x-stoplight:
                id: ln7j1pvb10qm5
              description: '#TODO'
    OrganizationUserAssignmentStatuses:
      title: User organization assignment statuses
      x-stoplight:
        id: q88qdi5b7ck97
      allOf:
        - $ref: ./models/EventStatus.yaml
        - type: object
          x-stoplight:
            id: plf82odynqb7n
          properties:
            project_statuses:
              type: array
              x-stoplight:
                id: cu2g6iyfm4cnf
              items:
                $ref: ./models/EventStatus.yaml
  parameters:
    OrganizationId:
      name: org_id
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Organization identifier
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        default: 10
      description: The limit used for this page of results. This will be the same as the limit query parameter unless it exceeded the maximum value allowed for this API endpoint
    Offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        default: 0
      description: The offset used for this page of results
    Sort:
      name: sort
      in: query
      schema:
        type: string
      description: Indicate sort by field
    Order:
      name: order
      in: query
      schema:
        type: string
        enum:
          - ASC
          - DESC
        default: ASC
      description: Indicate sorting direction
    UserId:
      name: user_id
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: User identifier
    ProjectId:
      name: project_id
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Project identifier
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: ''
tags:
  - name: Organizations
  - name: Projects
  - name: Ready for implementation
  - name: Users
  - name: TODO
security:
  - BearerAuth: []
